@page "/"

@inject NavigationManager _manager
@inject ApplicationDbContext dbContext
@using FootballShirtStore.Data
@using FootballShirtStore.Entities
@using Microsoft.EntityFrameworkCore;
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div class="text-center">
    <main>
        @if (items is not null)
        {
            var max = 0;
            @if(items.Count < 4 )
            {
                max = items.Count;
            }
            else{ max = 4; }
            <section>
                
                <h2 class="mt-3">Recently added</h2>
                <div class="shirts mb-3">
                    @for (int i = 0; i < max; i++)
                    {
                        var price = items[i].Price * items[i].PriceMultiplier;
                        var img = items[i].FileData.FirstOrDefault(f => f.Type == FileDataType.Image);
                        @if (img is not null)
                        {
                        var base64String = Convert.ToBase64String(img.Data);
                        <div class="card home-shirt-card m-1">
                            <a href="@($"/shirts/{items[i].Id}")">
                                    <div class="price">@price.ToString($"F0") zł</div>
                                
                                <img src="data:image /png;base64,@base64String" class="card-img-top home-card" alt="@items[i].Name">
                                
                                <div class="card-body">
                                    <h5 class="card-title">@items[i].Name</h5>
                                    <p class="card-text p-1">For @items[i].Type</p>
                                    
                                </div>
                            </a>
                        </div>
                        }
                    }
                    </div>
                <h2 class="mt-3">Discounted shirts</h2>
                <div class="shirts mb-3">
                    @for (int i = 0; i < max; i++)
                    {
                        @if (items[i].PriceMultiplier<1){
                        var img = items[i].FileData.FirstOrDefault(f => f.Type == FileDataType.Image);
                        var price = items[i].Price * items[i].PriceMultiplier;
                        @if (img is not null)
                        {
                            var base64String = Convert.ToBase64String(img.Data);
                            <div class="card home-shirt-card m-1">
                                <a href="@($"/shirts/{items[i].Id}")">
                                        <div class="price">@price.ToString($"F0") zł</div>

                                    <img src="data:image /png;base64,@base64String" class="card-img-top home-card" alt="@items[i].Name">

                                    <div class="card-body">
                                        <h5 class="card-title">@items[i].Name</h5>
                                            <p class="card-text p-1">For @items[i].Type</p>
                                            <p class="card-text text-danger p-1 fs-4 mb-0"><del>@items[i].Price zł</del></p>
                                            <p class="card-text text-success p-1 fs-4 mt-0">@price zł</p>
                                            

                                    </div>
                                </a>
                            </div>
                        }
                        }
                    }
                </div>
               
                @if (visitCounter is not null)
                {
                    <div class="text-dark">
                        <h4>Visits of our site: @(visitCounter.Counter - 1)</h4>
                    </div>
                }
            </section>
        }
    </main>
</div>

@code {

    private List<Item> items;
    

    private VisitsCounter visitCounter;
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (visitCounter != null)
            {
                visitCounter.Counter++;

                dbContext.SaveChanges();
            }
            StateHasChanged();
        }
        return Task.CompletedTask;
    }

    protected override void OnInitialized() {
        
        visitCounter = dbContext.Visits.FirstOrDefault();
        items = dbContext.Items.Include(i => i.FileData).OrderByDescending(item => item.DateCreated).ToList();

    }
}