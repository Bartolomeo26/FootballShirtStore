@page "/shirts"
@inject ApplicationDbContext dbContext
@inject NavigationManager NavigationManager
@using FootballShirtStore.Data
@using FootballShirtStore.Entities
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer

<PageTitle>Shirts</PageTitle>

  
@if (items != null && items.Any())
{
    <div class="d-flex flex-column">
        @if (category is not null)
        {
            <h2>
                Shirts displayed for @category.CategoryName
                
            </h2>
        }
        @if (typeName is not null)
        {
            <h2>
                Shirts displayed for @typeName
                
            </h2>
        }
   
    <div class="d-flex justify-content-evenly flex-wrap mt-5">
        
        @foreach (var item in items)
        {
            @if ((category is not null && item.Category.CategoryName == category.CategoryName) || (typeName is not null && item.Type.ToString() == typeName))
            {
                var img = item.FileData.FirstOrDefault(f => f.Type == FileDataType.Image);

                var base64String = Convert.ToBase64String(img.Data);

                <div>

                    <a href="/shirts/@item.Id" class="item-card">
                        <div class="card d-flex flex-column align-items-start position-relative" style="width: 18rem; height: 25rem;">
                            
                            <img src="data:image/png;base64,@base64String" class="card-img-top img-fluid align-self-center"  alt="@item.Name">
                            <div class="card-body">
                                <small class="card-text text-secondary">For @item.Type</small>
                                <h5 class="card-title">@item.Name</h5>
                                <p class="card-text">@item.Description</p>
                            <p class="card-text fw-bold fs-5 positon-absolute bottom-0">Price: @item.Price</p>
                            </div>
                        </div>
                    </a>

                </div>
            }
            
        }
    </div>
    </div>
}
else
{
    <p>No items found.</p>
}

@code {
    private List<Item> items;
    private string categoryName;
    private Category category;
    
    private string typeName;
    protected override void OnInitialized()
    {
        // Pobierz wszystkie przedmioty z bazy danych
        items = dbContext.Items.Include(i => i.FileData).ToList();
       
        categoryName = NavigationManager.Uri.Contains("?category=") ?
           NavigationManager.Uri.Split("?category=")[1] : null;
        typeName = NavigationManager.Uri.Contains("?type=") ?
          NavigationManager.Uri.Split("?type=")[1] : null;
        category = dbContext.Categories.FirstOrDefault(i =>  i.CategoryName.Replace(" ", "") == categoryName);
        
       
        StateHasChanged();
    }
}