@page "/shirts/{id}"
@inject ApplicationDbContext dbContext
@using FootballShirtStore.Data
@using FootballShirtStore.Entities
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer

<PageTitle>@item.Name</PageTitle>

@if (item != null && item.Category !=null)
{
    var img = item.FileData.FirstOrDefault(f => f.Type == FileDataType.Image);
    var base64String = Convert.ToBase64String(img.Data);
   

        <div class="d-flex justify-content-center w-100 mt-5">
            <div class="d-flex flex-row justify-content-evenly shirt-details-card align-items-center bg-light rounded-3 p-3 w-50">
                @if (item.FileData.Any())
        {
                <div class="d-flex flex-wrap ms-3 images">
                @foreach (var fileData in item.FileData)
                {
                    <img src="@($"data:image/png;base64,{Convert.ToBase64String(fileData.Data)}")" class="img-fluid rounded-5 shirt-details-image" alt="Image" style="max-width: 200px; max-height: 200px; margin: 10px;" />
                }
            </div>
        }
            <div class="d-flex flex-column info justify-content-start align-items-start h-100 border-2 border-secondary ps-5 border-start ms-5">
                <p>For @item.Type</p>
                <p>@item.Category.ParentCategory.CategoryName: @item.Category.CategoryName</p>
                <h3>@item.Name</h3>
                <h4>Pricea: @item.Price</h4>
                <p class="fs-5">@item.Description</p>
                <p>Color: @item.Color</p>
                <div>
                    <button class="btn btn-success">Add to basket</button>
                </div>
            </div>

            </div>
        </div>
        
  
}
else
{
    <p>Item not found.</p>
}

@code {

    [Parameter]
    public string id { get; set; }

    private Item item;



    protected override void OnInitialized()
    {
        // Pobierz przedmiot na podstawie identyfikatora z parametru adresu
        int itemId;
        if (int.TryParse(id, out itemId))
        {
            item = dbContext.Items.Include(i => i.FileData).Include(i => i.Category).Include(i => i.Category.ParentCategory).FirstOrDefault(i => i.Id == itemId);
        }
    }
   

}
